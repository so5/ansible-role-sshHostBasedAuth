- name: initialize allowed ip address list
  set_fact:
    ssh_hostbased_auth_allowed_ips: []

- name: convert specified allowed hosts to IP address
  set_fact:
    ssh_hostbased_auth_allowed_ips: "{{ ssh_hostbased_auth_allowed_ips + [lookup('dig',item)|replace('NXDOMAIN',item)|replace('localhost','127.0.0.1')] }}"
  loop: "{{ ssh_hostbased_auth_allowed_hosts }}"

- name: remove duplicates
  set_fact:
    ssh_hostbased_auth_allowed_ips: "{{ ssh_hostbased_auth_allowed_ips|flatten|unique}}"

- name: prepend hostbased authentication setting to sshd_config
  blockinfile:
    path: "{{ ssh_hostbased_auth_sshd_config }}"
    insertbefore: BOF
    block: |
      HostbasedAuthentication yes
      UseDNS no
  notify: restart_sshd

- name: restrict authentication method only to hostbased authentication
  lineinfile:
    path: "{{ ssh_hostbased_auth_sshd_config }}"
    insertbefore: BOF
    line: AuthenticationMethods hostbased
  when: ssh_hostbased_auth_only
  notify: restart_sshd

- name: change ssh-keysign's permission
  file:
    path: "{{ ssh_hostbased_auth_ssh_keysign}}"
    owner: root
    group: root
    mode:  04755

- block:
  - name: gather host key and store it to facts
    include_tasks: keyscan.yml
    with_items: "{{ ssh_hostbased_auth_allowed_ips }}"
    loop_control:
      loop_var: target

  - name: write host keys to known_hosts file
    copy:
      dest: "{{ ssh_hostbased_auth_known_hosts }}"
      content: "{{ host_key }}"

  - name: write hostnames to shots.equiv file
    copy:
      dest: "{{ ssh_hostbased_auth_shosts_equiv }}"
      content: "{{ ssh_hostbased_auth_allowed_ips | join('\n') }}"
  when: ssh_hostbased_auth_allowed_ips |length >0